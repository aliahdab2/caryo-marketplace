spring.application.name=autotrader-backend
server.port=8080
spring.main.allow-bean-definition-overriding=true

# H2 Database Configuration
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA Configuration
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true

# JWT Configuration
autotrader.app.jwtSecret=autotraderSecretKey123456789012345678901234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ
autotrader.app.jwtExpirationMs=86400000

# Logging Configuration
logging.level.org.springframework.security=INFO
logging.level.com.autotrader.autotraderbackend=INFO
logging.level.com.autotrader.autotraderbackend.service.storage=INFO
logging.level.com.autotrader.autotraderbackend.service.CarListingService=INFO

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
app.upload.max-file-size=5242880

# Allowed Image Types
app.upload.allowed-types=image/jpeg,image/png,image/gif,image/webp
app.upload.image-base-path=listings

# ========================================
# STORAGE CONFIGURATION
# ========================================
# S3-Compatible Storage Service Configuration
# Supports both AWS S3 (production) and MinIO (development)

# General Storage Settings
storage.general.default-bucket-name=${STORAGE_DEFAULT_BUCKET_NAME:autotrader-assets}
storage.general.base-url=${STORAGE_BASE_URL:http://localhost:9000}
storage.general.public-access-enabled=${STORAGE_PUBLIC_ACCESS:true}
storage.general.default-region=${STORAGE_DEFAULT_REGION:us-east-1}

# S3-Compatible Service Configuration
storage.s3.enabled=${STORAGE_S3_ENABLED:true}
storage.s3.endpoint-url=${STORAGE_ENDPOINT_URL:http://localhost:9000}
storage.s3.access-key-id=${STORAGE_ACCESS_KEY:minioadmin}
storage.s3.secret-access-key=${STORAGE_SECRET_KEY:minioadmin}
storage.s3.bucket-name=${STORAGE_BUCKET_NAME:autotrader-assets}
storage.s3.region=${STORAGE_REGION:us-east-1}
storage.s3.path-style-access-enabled=${STORAGE_PATH_STYLE_ACCESS:true}
storage.s3.signed-url-expiration-seconds=${STORAGE_SIGNED_URL_EXPIRATION:3600}

# Storage Key Patterns Configuration
# Available placeholders: {listingId}, {userId}, {timestamp}, {filename}, {category}, {uuid}, {date}, {level}, {originalPath}
storage.key-patterns.listing-media=${STORAGE_KEY_LISTING_MEDIA:listings/{listingId}/{timestamp}_{filename}}
storage.key-patterns.user-avatar=${STORAGE_KEY_USER_AVATAR:users/{userId}/avatar_{timestamp}_{filename}}
storage.key-patterns.temp-uploads=${STORAGE_KEY_TEMP_UPLOADS:temp/{uuid}_{filename}}
storage.key-patterns.sample-data=${STORAGE_KEY_SAMPLE_DATA:samples/{category}/{filename}}
storage.key-patterns.documents=${STORAGE_KEY_DOCUMENTS:documents/{category}/{timestamp}_{filename}}
storage.key-patterns.thumbnails=${STORAGE_KEY_THUMBNAILS:thumbnails/{originalPath}/{filename}}
storage.key-patterns.backups=${STORAGE_KEY_BACKUPS:backups/{date}/{category}/{filename}}
storage.key-patterns.logs=${STORAGE_KEY_LOGS:logs/{date}/{level}/{filename}}

# Legacy Configuration (for backwards compatibility)
aws.s3.bucket-name=${STORAGE_BUCKET_NAME:autotrader-assets}
aws.s3.force-path-style=${STORAGE_PATH_STYLE_ACCESS:true}

# SpringDoc OpenAPI
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.docExpansion=none
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.csrf.enabled=false

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,mappings
management.endpoint.health.show-details=WHEN_AUTHORIZED
management.health.defaults.enabled=true
management.health.db.enabled=true
management.health.diskspace.enabled=true
management.endpoint.health.probes.enabled=true
management.endpoint.health.group.readiness.include=db,diskSpace
springdoc.api-docs.enabled=true
springdoc.packages-to-scan=com.autotrader.autotraderbackend.controller

# CORS Configuration
spring.web.cors.allowed-origins=http://localhost:3000,http://localhost:3001
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,PATCH,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true
spring.web.cors.max-age=3600
spring.web.cors.exposed-headers=Authorization

# Banner Configuration
spring.banner.location=classpath:banners/banner.txt
# Use the profile-specific banner when a profile is active

# Spring Boot Application Properties
spring.main.banner-mode=console
# Set to 'off' to disable the banner, 'console' to show in console, 'log' to show in logs
