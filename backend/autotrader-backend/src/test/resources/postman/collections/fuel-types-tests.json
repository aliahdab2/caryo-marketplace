{
  "info": {
    "_postman_id": "fuel-types-tests-collection",
    "name": "AutoTrader Fuel Types Tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "exec": [
          "// Check if admin token exists, if not login as admin",
          "if (!pm.environment.get('admin_auth_token')) {",
          "    console.log('No admin token found, logging in as admin first');",
          "    ",
          "    const adminLoginRequest = {",
          "        url: pm.environment.get('baseUrl') + '/auth/signin',",
          "        method: 'POST',",
          "        header: 'Content-Type:application/json',",
          "        body: {",
          "            mode: 'raw',",
          "            raw: JSON.stringify({",
          "                username: pm.environment.get('admin_username'),",
          "                password: pm.environment.get('admin_password')",
          "            })",
          "        }",
          "    };",
          "    ",
          "    pm.sendRequest(adminLoginRequest, function (err, res) {",
          "        if (err) {",
          "            console.error('Error logging in as admin:', err);",
          "        } else {",
          "            if (res.code === 200 && res.json().token) {",
          "                const token = res.json().token;",
          "                pm.environment.set('admin_auth_token', token);",
          "                console.log('Admin token retrieved and set successfully');",
          "            } else {",
          "                console.error('Failed to retrieve admin token:', res.text());",
          "            }",
          "        }",
          "    });",
          "}",
          "",
          "console.log('Using admin token:', pm.environment.get('admin_auth_token') ? ",
          "    (pm.environment.get('admin_auth_token').substring(0,10) + '...') : 'none');"
        ],
        "type": "text/javascript"
      }
    }
  ],
  "item": [
    {
      "name": "Get All Fuel Types",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response is an array of fuel types\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.be.an('array');",
              "    if (jsonData.length > 0) {",
              "        pm.expect(jsonData[0]).to.have.property('id');",
              "        pm.expect(jsonData[0]).to.have.property('name');",
              "        pm.expect(jsonData[0]).to.have.property('displayNameEn');",
              "        pm.expect(jsonData[0]).to.have.property('displayNameAr');",
              "        pm.expect(jsonData[0]).to.have.property('slug');",
              "    }",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{admin_auth_token}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/fuel-types",
          "host": ["{{baseUrl}}"],
          "path": ["api", "fuel-types"]
        }
      }
    },
    {
      "name": "Get Fuel Type by ID",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response contains fuel type details\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('id');",
              "    pm.expect(jsonData).to.have.property('name');",
              "    pm.expect(jsonData).to.have.property('displayNameEn');",
              "    pm.expect(jsonData).to.have.property('displayNameAr');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{admin_auth_token}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/fuel-types/1",
          "host": ["{{baseUrl}}"],
          "path": ["api", "fuel-types", "1"]
        }
      }
    },
    {
      "name": "Get Fuel Type by Name",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response contains fuel type details\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('id');",
              "    pm.expect(jsonData).to.have.property('name');",
              "    pm.expect(jsonData).to.have.property('displayNameEn');",
              "    pm.expect(jsonData).to.have.property('displayNameAr');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{admin_auth_token}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/fuel-types/name/gasoline",
          "host": ["{{baseUrl}}"],
          "path": ["api", "fuel-types", "name", "gasoline"]
        }
      }
    },
    {
      "name": "Search Fuel Types",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Search results are valid\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.be.an('array');",
              "    if (jsonData.length > 0) {",
              "        pm.expect(jsonData[0]).to.have.property('id');",
              "        pm.expect(jsonData[0]).to.have.property('name');",
              "        pm.expect(jsonData[0]).to.have.property('displayNameEn');",
              "        pm.expect(jsonData[0]).to.have.property('displayNameAr');",
              "    }",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{admin_auth_token}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/fuel-types/search?q=gas",
          "host": ["{{baseUrl}}"],
          "path": ["api", "fuel-types", "search"],
          "query": [
            {
              "key": "q",
              "value": "gas"
            }
          ]
        }
      }
    },
    {
      "name": "Create Fuel Type (Admin)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test(\"Response contains created fuel type\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('id');",
              "    pm.expect(jsonData.name).to.equal('custom-fuel-type');",
              "    pm.expect(jsonData.displayNameEn).to.equal('Custom Fuel Type');",
              "    pm.expect(jsonData.displayNameAr).to.equal('نوع وقود مخصص');",
              "    ",
              "    // Store ID for update and delete operations",
              "    pm.environment.set(\"fuel_type_id\", jsonData.id);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{admin_auth_token}}",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"custom-fuel-type\",\n    \"displayNameEn\": \"Custom Fuel Type\",\n    \"displayNameAr\": \"نوع وقود مخصص\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/fuel-types",
          "host": ["{{baseUrl}}"],
          "path": ["api", "fuel-types"]
        }
      }
    },
    {
      "name": "Update Fuel Type (Admin)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response contains updated fuel type\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('id').to.equal(Number(pm.environment.get(\"fuel_type_id\")));",
              "    pm.expect(jsonData.displayNameEn).to.equal('Updated Fuel Type');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{admin_auth_token}}",
              "type": "string"
            }
          ]
        },
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"custom-fuel-type\",\n    \"displayNameEn\": \"Updated Fuel Type\",\n    \"displayNameAr\": \"نوع وقود محدث\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/fuel-types/{{fuel_type_id}}",
          "host": ["{{baseUrl}}"],
          "path": ["api", "fuel-types", "{{fuel_type_id}}"]
        }
      }
    },
    {
      "name": "Delete Fuel Type (Admin)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 204\", function () {",
              "    pm.response.to.have.status(204);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{admin_auth_token}}",
              "type": "string"
            }
          ]
        },
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/fuel-types/{{fuel_type_id}}",
          "host": ["{{baseUrl}}"],
          "path": ["api", "fuel-types", "{{fuel_type_id}}"]
        }
      }
    }
  ]
}
